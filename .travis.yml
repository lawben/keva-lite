language: cpp

sudo: false
dist: trusty
osx_image: xcode9.2

matrix:
  include:
    # Linux + clang + debug
    - os: linux
      addons: &clang5
        apt:
          sources:
          - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env: DCMAKE_BUILD_TYPE=Debug
      compiler: clang

    # Linux + clang + release
    - os: linux
      addons: *clang5
      env: DCMAKE_BUILD_TYPE=Release
      compiler: clang

    # Linux + GCC + debug
    - os: linux
      addons: &gcc7
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: DCMAKE_BUILD_TYPE=Debug
      compiler: gcc

    # Linux + GCC + release
    - os: linux
      addons: *gcc7
      env: DCMAKE_BUILD_TYPE=Release
      compiler: gcc

    # Linux + clang + release + asan + ubsan
    - os: linux
      addons: *clang5
      env: DCMAKE_BUILD_TYPE=Release DENABLE_SANITIZE=ON
      compiler: clang

    # Linux + clang + debug + asan + ubsan
    - os: linux
      addons: *clang5
      env: DCMAKE_BUILD_TYPE=Debug DENABLE_SANITIZE=ON
      compiler: clang

    # OSX + apple-clang + debug
    - os: osx
      compiler: clang
      env: DCMAKE_BUILD_TYPE=Debug

    # OSX + apple-clang + release
    - os: osx
      compiler: clang
      env: DCMAKE_BUILD_TYPE=Release

script:
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir -p build && cd build
  - cmake .. && make -j
  - cmake --build . --target all
  - ./test/keva-test


install:
  - if [[ $CXX = g++ ]]; then export CXX="g++-7" CC="gcc-7"; fi
  - ${CXX} --version

  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"
  - cd "${DEPS_DIR}"

  ### Have to install libc++ for clang on linux ###
  - |
    LLVM_INSTALL=${DEPS_DIR}/llvm/install
    mkdir -p ${LLVM_INSTALL}
    # if in linux and compiler clang and llvm not installed
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${CXX%%+*}" == "clang" && -n "$(ls -A ${LLVM_INSTALL})" ]]; then
      LLVM_VERSION="5.0.0";
      export CXX="clang++-5.0" CC="clang-5.0"
      LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
      LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
      LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
      mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
      travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm
      travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx
      travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi
      (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_INSTALL})
      (cd llvm/build/projects/libcxx && make install -j2)
      (cd llvm/build/projects/libcxxabi && make install -j2)
      export CXXFLAGS="-isystem ${LLVM_INSTALL}/include/c++/v1"
      export LDFLAGS="-L ${LLVM_INSTALL}/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_INSTALL}/lib"
    fi
  ###

notifications:
  email: false


#language: cpp
#
#sudo: false
#dist: trusty
#osx_image: xcode9.2
#
#install:
#  - if [[ "$CXX" = "g++" ]]; then export CXX="g++-7" CC="gcc-7"; fi
#  - if [[ "$CXX" = "clang++" ]]; then export CXX="clang++-5.0" CC="clang-5.0"; fi
#  - echo ${PATH}
#  - ${CXX} --version
#
#addons:
#  apt:
#    sources:
#      - ubuntu-toolchain-r-test
#      - llvm-toolchain-trusty-5.0
#      - george-edison55-trusty-backports
#    packages:
#      - cmake
#      - cmake-data
#      - gcc-7
#      - g++-7
#      - clang-5.0
#
#os:
#  - linux
##  - osx
#
#compiler:
#  - clang
##  - gcc
#
#env:
#  matrix:
#    - DCMAKE_BUILD_TYPE=Debug BUILD_DIR=build_debug
##    - DCMAKE_BUILD_TYPE=Release BUILD_DIR=build_release
#
##matrix:
##  exclude:
##  - os: osx
##    compiler: gcc
#
#script:
#  - mkdir -p build
#  - cd build
#  - cmake .. && make -j
#  - cmake --build . --target keva-test
#  - ./test/keva-test
#
#notifications:
#  email: false